name: Test PDF & EPUB Generation

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# permissions:
#   contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        volume: [ 1, 2, 3 ]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f Scripts/requirements.txt ]; then pip install -r Scripts/requirements.txt; fi
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Install XeLaTeX
      run: |
        sudo apt-get update
        sudo apt-get install -y texlive-xetex
    - name: Generate PDF
      run: |
        volume="${{ matrix.volume }}"
        padded_volume="$(printf '%02d' ${volume})"

        echo "PADDED_VOLUME=${padded_volume}" >> $GITHUB_ENV
        echo "Generating PDF for Volume ${volume}"
        python "Scripts/output_tex.py" "Volumes/Volume ${volume}" "Output_v${padded_volume}" -p
      shell: bash
    - name: Generate EPUB
      run: |
        volume="${{ matrix.volume }}"
        padded_volume="$(printf '%02d' ${volume})"

        echo "PADDED_VOLUME=${padded_volume}" >> $GITHUB_ENV
        echo "Generating EPUB for Volume ${volume}"
        python "Scripts/output_epub.py" "Volumes/Volume ${volume}" "Output_v${padded_volume}"
      shell: bash
    - name: Upload PDFs
      uses: actions/upload-artifact@v4
      with:
        name: WorldEnd2 Vol. ${{ matrix.volume }}.pdf
        path: Output_v${{ env.PADDED_VOLUME }}/WorldEnd2 v${{ env.PADDED_VOLUME }}.pdf
    - name: Upload EPUBs
      uses: actions/upload-artifact@v4
      with:
        name: WorldEnd2 Vol. ${{ matrix.volume }}.epub
        path: Output_v${{ env.PADDED_VOLUME }}/WorldEnd2 v${{ env.PADDED_VOLUME }}.epub
